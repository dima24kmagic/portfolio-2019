{"version":3,"sources":["App/GlobalStyles.js","components/SideNav/MenuOptions/styles.ts","components/SideNav/MenuOptions/MenuOptions.tsx","components/SideNav/hooks/useSideNavAnimation.ts","components/SideNav/styles.ts","components/SideNav/SideNavContext.tsx","components/SideNav/SideNav.tsx","components/AnimatedSwitch/AnimatedSwitch.tsx","screens/Home/styles.ts","theme/ThemeModeContextProvider.tsx","theme/theme.tsx","components/Preview/PreviewContent.ts","components/AnimatedName/useNameAnimation.tsx","components/AnimatedName/AnimatedName.tsx","components/Preview/HomePreview/HomePreview.tsx","screens/Home/Home.tsx","components/SmoothScroll/hooks/useSmoothScroll.ts","components/SmoothScroll/SmoothScroll.tsx","App/App.tsx","index.tsx","images/Me Landscape.jpg"],"names":["GlobalStyle","createGlobalStyle","theme","bg","primary","MenuOptionWrapper","styled","animated","span","MenuOption","NavLink","color","secondary","transitionSpeed","secondaryHover","withTheme","props","menuOptionTransitions","onToggleNav","map","item","key","style","exact","to","onClick","text","useSideNavAnimation","isOpen","menuOptions","wrapperRef","useRef","wrapperStyleProps","useSpring","ref","from","transform","config","easing","easeExpInOut","duration","bgRef","bgBlurTransforms","useTransition","opacity","enter","leave","meuOptionsRef","option","trail","useChain","Wrapper","div","BackdropFilter","HamburgerStyled","HamburgerSpin","isActive","secondaryColor","SideNavContext","React","createContext","handleToggle","useSideNavContext","useContext","SideNavContextProvider","children","useState","isNavOpen","setNavOpen","Provider","value","toggleButton","Root","AnimatedSwitch","location","useLocation","transitions","pathname","initial","filter","position","top","left","width","height","update","slow","ThemeMode","ContentName","PlainText","TextDivider","ContentHolder","ThemeModeContext","mode","LIGHT","toggleMode","ThemeModeContextProvider","currHours","Date","getHours","DARK","setMode","getModeValue","lightVal","darkVal","useTheme","white","black","primaryHover","accent","themeColor","getConvertedTheme","useToggleTheme","PreviewContent","PreviewImage","NavigateMoreButton","OverflowWrapper","H1","h1","useNameAnimation","introText","introTextTrails","useTrail","length","renderName","index","HomePreview","showMoreButtonStyled","delay","easeExpOut","src","meLandscapeImg","contentSpring","toggleTheme","useSmoothScroll","scrollWrapperRef","scrollDeltaY","windowHeight","window","innerHeight","wrapperHeight","useEffect","current","clientHeight","scrollProps","setScrollProps","handleScroll","e","newScrollValue","deltaY","Math","abs","Scrollable","SmoothScroll","console","log","onWheel","path","ReactDOM","render","document","getElementById","module","exports"],"mappings":"2kCAEA,IAoCeA,EApCKC,4BAAH,KAuBC,qBACZC,MACEC,GAAMC,W,oaCvBP,IAAMC,EAAoBC,kBAAOC,IAASC,KAAhBF,CAAH,KAIjBG,EAAaH,kBAAOI,IAAPJ,CAAH,KAEZ,qBACPJ,MACES,MAASC,aAKO,qBAAGV,MAASW,mBAIrB,qBACPX,MACES,MAASG,kBAMJ,qBACPZ,MACES,MAASG,kBCNFC,2BAbf,SAAqBC,GAAQ,IACnBC,EAAuCD,EAAvCC,sBAAuBC,EAAgBF,EAAhBE,YAC/B,OAAOD,EAAsBE,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,IAAKL,EAAY,EAAZA,MAC7C,OACE,kBAACX,EAAD,CAAmBiB,MAAON,EAAOK,IAAKA,GACpC,kBAACZ,EAAD,CAAYc,OAAK,EAACC,GAAIJ,EAAKI,GAAIC,QAASP,GACrCE,EAAKM,a,QC4CDC,EA1Da,SAACC,EAAiBC,GAC5C,IAAMC,EAAaC,mBACbC,EAAoBC,YAAU,CAClCC,IAAKJ,EACLK,KAAM,CAAEC,UAAW,+BACnBZ,GAAI,CACFY,UAAWR,EACP,4BACA,+BAENS,OAAQ,CACNC,OAAQC,IACRC,SAAUZ,EAAS,KAAO,OAGxBa,EAAQV,mBACRW,EAAmBC,YAAcf,EAAQ,KAAM,CACnDM,IAAKO,EACLN,KAAM,CAAES,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAGdG,EAAgBhB,mBAChBd,EAAwB0B,YAC5Bf,EAASC,EAAc,IACvB,SAAAmB,GAAM,OAAIA,EAAOtB,OACjB,CACEQ,IAAKa,EACLZ,KAAM,CACJS,QAAS,EACTR,UAAW,+BAEbS,MAAO,CACLD,QAAS,EACTR,UAAW,8BAEbU,MAAO,CACLF,QAAS,EACTR,UAAW,+BAEba,MAAOrB,EAAS,IAAM,MAU1B,OANAsB,YACEtB,EACI,CAACa,EAAOX,EAAYiB,GACpB,CAACA,EAAejB,EAAYW,GAChCb,EAAS,CAAC,EAAG,EAAG,IAAO,CAAC,EAAG,GAAK,KAE3B,CACLI,oBACAf,wBACAyB,qB,mrCCtDG,IAAMS,EAAU7C,kBAAOC,IAAS6C,IAAhB9C,CAAH,KAYJ,qBACZJ,MACEC,GAAMS,aAKe,qBAAGV,MAASW,mBAI1BwC,EAAiB/C,kBAAOC,IAAS6C,IAAhB9C,CAAH,KAadgD,EAAkBhD,kBAAOiD,gBAAPjD,CAAH,KAeJ,gBAClBkD,EADkB,EAClBA,SADkB,IAElBtD,MACQU,EAHU,EAGhBT,GAAMS,UACc6C,EAJJ,EAIhB9C,MAASC,UAJO,OAMb4C,EAAWC,EAAiB7C,KAQzB,qBAAG4C,SAA2B,MAAQ,U,QCnE9CE,EAAiBC,IAAMC,cAAc,CACzChC,QAAQ,EACRiC,aAAc,eAGHC,EAAoB,WAAO,IAAD,EACJC,qBAAWL,GAC5C,MAAO,CAAE9B,OAF4B,EAC7BA,OACSiC,aAFoB,EACrBA,eAILG,EAAyB,SAAC,GAIhC,IAHLC,EAGI,EAHJA,SAGI,EAC4BC,oBAAS,GADrC,mBACGC,EADH,KACcC,EADd,KAMJ,OACE,kBAACV,EAAeW,SAAhB,CACEC,MAAO,CAAE1C,OAAQuC,EAAWN,aANR,WACtBO,GAAYD,MAOTF,ICiBQlD,2BA1Bf,YAA0C,IAAvBc,EAAsB,EAAtBA,YAAsB,EACNiC,IAAzBlC,EAD+B,EAC/BA,OAAQiC,EADuB,EACvBA,aADuB,EAMnClC,EAAoBC,EAAQC,GAH9Ba,EAHqC,EAGrCA,iBACAzB,EAJqC,EAIrCA,sBACAe,EALqC,EAKrCA,kBAEF,OACE,oCACE,kBAACsB,EAAD,CAAiBE,SAAU5B,EAAQ2C,aAAcV,IAChDnB,EAAiBvB,KAChB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKL,EAAd,EAAcA,MAAd,OACEI,GACE,kBAACiC,EAAD,CAAgBhC,IAAKA,EAAKI,QAASoC,EAAcvC,MAAON,OAG9D,kBAACmC,EAAD,CAAS7B,MAAOU,GACd,kBAAC,EAAD,CACEd,YAAa2C,EACb5C,sBAAuBA,S,8NC1BjC,IAAMuD,EAAOlE,kBAAOC,IAAS6C,IAAhB9C,CAAH,KAkDKmE,MAtCf,YAA8C,IAApBR,EAAmB,EAAnBA,SACRE,EAAcL,IAAtBlC,OACF8C,EAAWC,cACXC,EAAcjC,YAAc+B,GAAU,SAAAA,GAAQ,OAAIA,EAASG,WAAU,CACzEC,QAAS,CACPlC,QAAS,EACTR,UAAW,sBACX2C,OAAQ,aAEV5C,KAAM,CACJS,QAAS,EACTR,UAAW,uBACX4C,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRL,OAAQ,aAEVlC,MAAO,CAAED,QAAS,EAAGR,UAAW,uBAChCU,MAAO,CAAEF,QAAS,EAAGR,UAAW,yBAChCiD,OAAQ,CAAEN,OAAQZ,EAAY,YAAc,aAC5C9B,OAAQA,IAAOiD,OAGjB,OACE,oCACGV,EAAYzD,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,KAAMJ,EAAiB,EAAjBA,MAAOK,EAAU,EAAVA,IAC/B,OACE,kBAACmD,EAAD,CAAMnD,IAAKA,EAAKC,MAAON,GACrB,kBAAC,IAAD,CAAQ0D,SAAUtD,GAAO6C,S,y6BC/C9B,ICHKsB,EDGCf,EAAOlE,kBAAO,MAAPA,CAAH,KASD,qBACZJ,MACEC,GAAMC,WAGe,qBAAGF,MAASW,mBAG1B2E,EAAclF,kBAAO,KAAPA,CAAH,KAKb,qBACPJ,MACES,MAASP,WAKFqF,EAAYnF,kBAAO,IAAPA,CAAH,KAEX,qBACPJ,MACES,MAASP,WAGO,qBAAGF,MAASW,mBAOrB6E,EAAcpF,kBAAO,MAAPA,CAAH,KAIXqF,EAAgBrF,kBAAOC,IAAS6C,IAAhB9C,CAAH,M,SClDdiF,O,eAAAA,I,kBAAAA,M,KAKL,IAAMK,EAAmBjC,IAAMC,cAAc,CAClDiC,KAAMN,EAAUO,MAChBC,WAAY,eAkBCC,EAfkB,SAAC,GAA2C,IAAzC/B,EAAwC,EAAxCA,SAC5BgC,GAAY,IAAIC,MAAOC,WAD6C,EAElDjC,mBACtB+B,EAAY,IAAMA,EAAY,EAAIV,EAAUa,KAAOb,EAAUO,OAHW,mBAEnED,EAFmE,KAE7DQ,EAF6D,KAQ1E,OACE,kBAACT,EAAiBvB,SAAlB,CAA2BC,MAAO,CAAEuB,OAAME,WAJzB,WACjBM,EAAQR,IAASN,EAAUO,MAAQP,EAAUa,KAAOb,EAAUO,UAI3D7B,ICnBP,SAASqC,EAAaT,EAAiBU,EAAkBC,GACvD,OAAOX,IAASN,EAAUO,MAAQS,EAAWC,EAG/C,IAoBaC,EAAW,WAEtB,OAtBwB,SAACZ,GACzB,MAAO,CACL1F,GAAI,CACFC,QAASkG,EAAaT,EAAM,UAAW,WACvCjF,UAAW0F,EAAaT,EAAM,UAAW,YAE3ClF,MAAO,CACL+F,MAAO,UACPC,MAAO,UACPvG,QAASkG,EAAaT,EAAM,UAAW,WACvCe,aAAcN,EAAaT,EAAM,UAAW,QAC5CjF,UAAW0F,EAAaT,EAAM,UAAW,WACzC/E,eAAgBwF,EAAaT,EAAM,UAAW,WAC9CgB,OAAQP,EAAaT,EAAM,UAAW,WACtCiB,WAAYR,EAAaT,EAAM,OAAQ,YAEzChF,gBAAiB,QAMZkG,CADUhD,qBAAW6B,GAApBC,OAIGmB,EAAiB,WAE5B,OADuBjD,qBAAW6B,GAA1BG,Y,yjCC5BH,IAAMkB,GAAiB3G,kBAAO,MAAPA,CAAH,MAyBd4G,GAAe5G,kBAAO,MAAPA,CAAH,MAOT,qBACZJ,MACES,MAASgG,SAKFQ,GAAqB7G,kBAAOC,IAAS6C,IAAhB9C,CAAH,KAKpB,qBACPJ,MACES,MAASC,aAIF,qBACPV,MACES,MAASG,kBAKK,qBAAGZ,MAASW,mB,kyBCzDlC,IAAMuG,GAAkB9G,kBAAO,MAAPA,CAAH,MAKf+G,GAAK/G,kBAAOC,IAAS+G,GAAhBhH,CAAH,MAGG,qBACPJ,MACES,MAASC,aA0DA2G,GA9BU,WACvB,IAAMC,EAAY,CAAC,mBAAoB,gBAEjCC,EAAkBC,YAASF,EAAUG,OAAQ,CACjDxF,KAAM,CACJS,QAAS,EACTR,UAAW,+BAEbZ,GAAI,CACFoB,QAAS,EACTR,UAAW,6BAEbC,OAAQ,CACNG,SAAU,IACVF,OAAQC,OAaZ,MAAO,CAAEqF,WATU,kBACjBH,EAAgBtG,KAAI,SAACmD,EAAOuD,GAC1B,OACE,kBAACT,GAAD,CAAiB/F,IAAKmG,EAAUK,IAC9B,kBAACR,GAAD,CAAI/F,MAAOgD,GAAQkD,EAAUK,W,+KC3DvC,IAAM1E,GAAU7C,kBAAO,MAAPA,CAAH,MAgBES,4BALf,WAAyB,IACf6G,EAAeL,KAAfK,WACR,OAAO,kBAAC,GAAD,KAAUA,Q,oBC0BJE,OA5Bf,SAAqB9G,GAAe,YACvBA,GACX,IAAM+G,EAAuB9F,YAAU,CACrC+F,MAAO,KACP7F,KAAM,CACJS,QAAS,EACTR,UAAW,+BAEbZ,GAAI,CACFoB,QAAS,EACTR,UAAW,+BAEbC,OAAQ,CACNG,SAAU,KACVF,OAAQ2F,OAGZ,OACE,kBAAChB,GAAD,KACE,kBAACC,GAAD,CAAcgB,IAAKC,OACnB,kBAAC,GAAD,MACA,kBAAChB,GAAD,CAAoB7F,MAAOyG,GAA3B,eC2BShH,4BA9Cf,SAAcC,GACZ,IAAMoH,EAAgBnG,YAAU,CAC9B+F,MAAO,KACP7F,KAAM,CACJS,QAAS,EACTR,UAAW,+BAEbZ,GAAI,CACFoB,QAAS,EACTR,UAAW,8BAEbC,OAAQ,CACNG,SAAU,KACVF,OAAQ2F,OAINI,EAAcrB,IACpB,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAMvF,QAAS4G,GACb,kBAAC1C,EAAD,CAAerE,MAAO8G,GACpB,kBAAC5C,EAAD,iBACA,kBAACC,EAAD,sEAGA,kBAACA,EAAD,4DAGA,kBAACC,EAAD,MACA,kBAACD,EAAD,uPAMA,kBAACA,EAAD,gFCbK6C,GAxCS,SACtBC,GAEA,IAAIC,EAAe,EAEbC,EAAeC,OAAOC,YAExBC,EAAgB,EACpBC,qBAAU,WACJN,EAAiBO,UACnBF,EAAgBL,EAAiBO,QAAQC,gBAE1C,CAACR,IAVD,MAYmCtG,aAAU,WAC9C,MAAO,CACLG,UAAU,oBAAD,OAAsBoG,EAAtB,gBAdV,mBAYIQ,EAZJ,KAYiBC,EAZjB,KAgCH,MAAO,CACLC,aAhBmB,SAACC,GACpB,IAAMC,EAAiBZ,EAAeW,EAAEE,OAGpCb,EAFAY,GAAkB,EAChBE,KAAKC,IAAIH,GAAkBR,EAAgBH,GACI,GAAjCG,EAAgBH,GAEjBW,EAGF,EAEjBH,EAAe,CACb7G,UAAU,oBAAD,OAAsBoG,EAAtB,eAKXQ,gB,2VC9BJ,IAAMQ,GAAalJ,kBAAOC,IAAS6C,IAAhB9C,CAAH,MAiCDmJ,OAhBf,SAAsBzI,GAAe,IAC3BiD,EAAajD,EAAbiD,SACFsE,EAAmBxG,mBAFS,EAGIuG,GAAgBC,GAA9CW,EAH0B,EAG1BA,aAAcF,EAHY,EAGZA,YAEtB,OADAU,QAAQC,IAAI,CAAEpB,qBAEZ,kBAACiB,GAAD,CACEtH,IAAKqG,EACLqB,QAASV,EACT5H,MAAO0H,GAEN/E,ICtBDpC,GAA0B,CAC9B,CAAEL,GAAI,IAAKE,KAAM,SACjB,CAAEF,GAAI,WAAYE,KAAM,eAgCXX,4BA1Bf,SAAaC,GACX,IAAMd,EAAQuG,IACd,OACE,kBAAC,gBAAD,CAAevG,MAAOA,GACpB,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAS2B,YAAaA,KACtB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAON,OAAK,EAACsI,KAAK,KAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,kBAACpE,EAAD,+BChChBqE,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,U,mBCb1BC,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.b924f4b0.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap');\n  @import url('https://fonts.googleapis.com/css?family=Chivo:300,700,900&display=swap');\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Lato', sans-serif;\n  }\n  ::-webkit-scrollbar {\n    //width: 0px;  /* Remove scrollbar space */\n    //background: transparent;  /* Optional: just make scrollbar invisible */\n  }\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    user-select: none;\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto,\n    segoe ui, arial, sans-serif;\n    background: ${({\n      theme: {\n        bg: { primary },\n      },\n    }) => primary};\n  }\n  \n  #root {\n    width: 100%;\n    height: 100%;\n    //overflow-y: auto;\n  }\n`\nexport default GlobalStyle\n","import { animated } from 'react-spring'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const MenuOptionWrapper = styled(animated.span)`\n  margin-bottom: 20px;\n`\n\nexport const MenuOption = styled(NavLink)`\n  text-decoration: none;\n  color: ${({\n    theme: {\n      color: { secondary },\n    },\n  }) => secondary};\n  font-size: 18px;\n  font-weight: 100;\n  transition: color ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  padding-right: 8px;\n  padding-left: 5px;\n  &.active {\n    color: ${({\n      theme: {\n        color: { secondaryHover },\n      },\n    }) => secondaryHover};\n    font-weight: 900;\n  }\n  &:hover {\n    color: ${({\n      theme: {\n        color: { secondaryHover },\n      },\n    }) => secondaryHover};\n  }\n`\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { MenuOption, MenuOptionWrapper } from './styles'\n\ninterface Props {\n  menuOptionTransitions: any[]\n  onToggleNav: () => void\n}\n\n/**\n * MenuOptions\n */\nfunction MenuOptions(props) {\n  const { menuOptionTransitions, onToggleNav } = props\n  return menuOptionTransitions.map(({ item, key, props }) => {\n    return (\n      <MenuOptionWrapper style={props} key={key}>\n        <MenuOption exact to={item.to} onClick={onToggleNav}>\n          {item.text}\n        </MenuOption>\n      </MenuOptionWrapper>\n    )\n  })\n}\n\nexport default withTheme(MenuOptions)\n","import { useRef } from 'react'\nimport { useChain, useSpring, useTransition } from 'react-spring'\nimport { easeExpInOut } from 'd3-ease'\n\nconst useSideNavAnimation = (isOpen: boolean, menuOptions: any[]) => {\n  const wrapperRef = useRef()\n  const wrapperStyleProps = useSpring({\n    ref: wrapperRef,\n    from: { transform: 'translate3d(100%, 0px, 0px)' },\n    to: {\n      transform: isOpen\n        ? 'translate3d(0%, 0px, 0px)'\n        : 'translate3d(100%, 0px, 0px)',\n    },\n    config: {\n      easing: easeExpInOut,\n      duration: isOpen ? 1400 : 800,\n    },\n  })\n  const bgRef = useRef()\n  const bgBlurTransforms = useTransition(isOpen, null, {\n    ref: bgRef,\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  const meuOptionsRef = useRef()\n  const menuOptionTransitions = useTransition(\n    isOpen ? menuOptions : [],\n    option => option.text,\n    {\n      ref: meuOptionsRef,\n      from: {\n        opacity: 0,\n        transform: 'translate3d(20px, 0px ,0px)',\n      },\n      enter: {\n        opacity: 1,\n        transform: 'translate3d(0px, 0px ,0px)',\n      },\n      leave: {\n        opacity: 0,\n        transform: 'translate3d(20px, 0px ,0px)',\n      },\n      trail: isOpen ? 100 : 120,\n    },\n  )\n\n  useChain(\n    isOpen\n      ? [bgRef, wrapperRef, meuOptionsRef]\n      : [meuOptionsRef, wrapperRef, bgRef],\n    isOpen ? [0, 0, 0.7] : [0, 0.6, 0.6],\n  )\n  return {\n    wrapperStyleProps,\n    menuOptionTransitions,\n    bgBlurTransforms,\n  }\n}\n\nexport default useSideNavAnimation\n","import styled from 'styled-components'\nimport { animated } from 'react-spring'\nimport { HamburgerSpin } from 'react-animated-burgers'\n\nexport const Wrapper = styled(animated.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  padding: 64px 24px;\n  width: 50vw;\n  min-width: 200px;\n  max-width: 300px;\n  height: 100vh;\n  background: ${({\n    theme: {\n      bg: { secondary },\n    },\n  }) => secondary};\n  z-index: 9999;\n  transform: translate3d(100%, 0px, 0px);\n  transition: background ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  will-change: transform;\n`\n\nexport const BackdropFilter = styled(animated.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.6);\n  opacity: 0;\n  cursor: pointer;\n  outline: none;\n  z-index: 9998;\n`\n\nexport const HamburgerStyled = styled(HamburgerSpin)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 10000;\n  outline: none;\n  padding: 0;\n  & div {\n    width: 20px;\n  }\n  & span,\n  & span::after,\n  & span::before {\n    width: 20px;\n    height: 1px;\n    background-color: ${({\n      isActive,\n      theme: {\n        bg: { secondary },\n        color: { secondary: secondaryColor },\n      },\n    }) => (isActive ? secondaryColor : secondary)};\n    transition: bottom 0.3s ease-in,\n      transform 0.4s 0.5s cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n  & span::before {\n    top: -7px;\n  }\n  & span::after {\n    bottom: ${({ isActive }) => (isActive ? '0px' : '-7px')};\n  }\n`\n","import React, { ReactNode, useContext, useState } from 'react'\n\nconst SideNavContext = React.createContext({\n  isOpen: false,\n  handleToggle: () => {},\n})\n\nexport const useSideNavContext = () => {\n  const { isOpen, handleToggle } = useContext(SideNavContext)\n  return { isOpen, handleToggle }\n}\n\nexport const SideNavContextProvider = ({\n  children,\n}: {\n  children: ReactNode\n}) => {\n  const [isNavOpen, setNavOpen] = useState(false)\n  const handleNavToggle = () => {\n    setNavOpen(!isNavOpen)\n  }\n\n  return (\n    <SideNavContext.Provider\n      value={{ isOpen: isNavOpen, handleToggle: handleNavToggle }}\n    >\n      {children}\n    </SideNavContext.Provider>\n  )\n}\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport MenuOptions from './MenuOptions/MenuOptions'\nimport useSideNavAnimation from './hooks/useSideNavAnimation'\nimport { BackdropFilter, HamburgerStyled, Wrapper } from './styles'\nimport { MenuLink } from '../../types/MenuLink'\nimport { useSideNavContext } from './SideNavContext'\n\ninterface Props {\n  isOpen: boolean\n  onToggleNav: () => void\n  menuOptions: MenuLink[]\n}\n\n/**\n * Side Navigation\n */\nfunction SideNav({ menuOptions }: Props) {\n  const { isOpen, handleToggle } = useSideNavContext()\n  const {\n    bgBlurTransforms,\n    menuOptionTransitions,\n    wrapperStyleProps,\n  } = useSideNavAnimation(isOpen, menuOptions)\n  return (\n    <>\n      <HamburgerStyled isActive={isOpen} toggleButton={handleToggle} />\n      {bgBlurTransforms.map(\n        ({ item, key, props }) =>\n          item && (\n            <BackdropFilter key={key} onClick={handleToggle} style={props} />\n          ),\n      )}\n      <Wrapper style={wrapperStyleProps}>\n        <MenuOptions\n          onToggleNav={handleToggle}\n          menuOptionTransitions={menuOptionTransitions}\n        />\n      </Wrapper>\n    </>\n  )\n}\n\nexport default withTheme(SideNav)\n","import React from 'react'\nimport { animated, config, useTransition } from 'react-spring'\nimport { Switch, SwitchProps, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useSideNavContext } from '../SideNav/SideNavContext'\n\ninterface Props extends SwitchProps {\n  children: any\n}\n\nconst Root = styled(animated.div)`\n  width: 100%;\n  height: auto;\n  // use default scroll behaviour on mobiles\n  @media (hover: none) and (pointer: coarse) {\n    height: 100%;\n  }\n`\n\n/**\n * Switch that animating routers\n */\nfunction AnimatedSwitch({ children }: Props) {\n  const { isOpen: isNavOpen } = useSideNavContext()\n  const location = useLocation()\n  const transitions = useTransition(location, location => location.pathname, {\n    initial: {\n      opacity: 1,\n      transform: 'translate3d(0%,0,0)',\n      filter: 'blur(0px)',\n    },\n    from: {\n      opacity: 0,\n      transform: 'translate3d(25%,0,0)',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      filter: 'blur(0px)',\n    },\n    enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n    leave: { opacity: 0, transform: 'translate3d(-25%,0,0)' },\n    update: { filter: isNavOpen ? 'blur(3px)' : 'blur(0px)' },\n    config: config.slow,\n  })\n\n  return (\n    <>\n      {transitions.map(({ item, props, key }) => {\n        return (\n          <Root key={key} style={props}>\n            <Switch location={item}>{children}</Switch>\n          </Root>\n        )\n      })}\n    </>\n  )\n}\n\nexport default AnimatedSwitch\n","import styled from 'styled-components'\nimport { animated } from 'react-spring'\nimport meLandscapeImg from '../../images/Me Landscape.jpg'\nimport mePortraitImg from '../../images/Me Portrait.jpg'\n\nexport const Root = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  min-height: 100%;\n  height: 100%;\n  padding: 0px 32px;\n  overflow: auto;\n  background: ${({\n    theme: {\n      bg: { primary },\n    },\n  }) => primary};\n  transition: background ${({ theme: { transitionSpeed } }) => transitionSpeed};\n`\n\nexport const ContentName = styled('h1')`\n  font-family: 'Chivo', sans-serif;\n  font-weight: 700;\n  font-size: 21px;\n  margin-bottom: 28px;\n  color: ${({\n    theme: {\n      color: { primary },\n    },\n  }) => primary};\n`\n\nexport const PlainText = styled('p')`\n  width: 100%;\n  color: ${({\n    theme: {\n      color: { primary },\n    },\n  }) => primary};\n  transition: color ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  @media (min-width: 650px) {\n    letter-spacing: 1px;\n    font-size: 18px;\n  }\n`\n\nexport const TextDivider = styled('div')`\n  margin-bottom: 8px;\n`\n\nexport const ContentHolder = styled(animated.div)`\n  width: 100%;\n  height: auto;\n  @media (min-width: 650px) {\n    width: 60%;\n  }\n`\n","import React, { ReactNode, useState } from 'react'\n\nexport enum ThemeMode {\n  DARK,\n  LIGHT,\n}\n\nexport const ThemeModeContext = React.createContext({\n  mode: ThemeMode.LIGHT,\n  toggleMode: () => {},\n})\n\nconst ThemeModeContextProvider = ({ children }: { children: ReactNode }) => {\n  const currHours = new Date().getHours()\n  const [mode, setMode] = useState(\n    currHours > 18 || currHours < 6 ? ThemeMode.DARK : ThemeMode.LIGHT,\n  )\n  const toggleMode = () => {\n    setMode(mode === ThemeMode.LIGHT ? ThemeMode.DARK : ThemeMode.LIGHT)\n  }\n  return (\n    <ThemeModeContext.Provider value={{ mode, toggleMode }}>\n      {children}\n    </ThemeModeContext.Provider>\n  )\n}\n\nexport default ThemeModeContextProvider\n","import { useContext } from 'react'\nimport { ThemeMode, ThemeModeContext } from './ThemeModeContextProvider'\n\nfunction getModeValue(mode: ThemeMode, lightVal: string, darkVal: string) {\n  return mode === ThemeMode.LIGHT ? lightVal : darkVal\n}\n\nconst getConvertedTheme = (mode: ThemeMode) => {\n  return {\n    bg: {\n      primary: getModeValue(mode, '#f6f6f6', '#020202'),\n      secondary: getModeValue(mode, '#020202', '#a20051'),\n    },\n    color: {\n      white: '#fcfcfc',\n      black: '#020202',\n      primary: getModeValue(mode, '#020202', '#f6f6f6'),\n      primaryHover: getModeValue(mode, '#00051d', '#fff'),\n      secondary: getModeValue(mode, '#f6f6f6', '#f6f6f6'),\n      secondaryHover: getModeValue(mode, 'hotpink', '#ff00a6'),\n      accent: getModeValue(mode, '#ba004e', 'hotpink'),\n      themeColor: getModeValue(mode, '#fff', '#020202'),\n    },\n    transitionSpeed: '0.5s',\n  }\n}\n\nexport const useTheme = () => {\n  const { mode } = useContext(ThemeModeContext)\n  return getConvertedTheme(mode)\n}\n\nexport const useToggleTheme = () => {\n  const { toggleMode } = useContext(ThemeModeContext)\n  return toggleMode\n}\n","import styled from 'styled-components'\nimport { animated } from 'react-spring'\nimport mePortraitImg from '../../images/Me Portrait.jpg'\nimport meLandscapeImg from '../../images/Me Landscape.jpg'\n\nexport const PreviewContent = styled('div')`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  min-height: 100vh;\n  background-size: cover;\n  background-position: center;\n\n  padding: 64px 15px 0 15px;\n  @media (min-width: 375px) {\n    padding: 64px 32px 0 32px;\n  }\n  @media (min-width: 480px) {\n    padding: 64px 32px 0 32px;\n  }\n  @media (min-width: 900px) {\n    padding: 80px 80px 0 80px;\n  }\n  @media (min-width: 1280px) {\n    padding: 128px 128px 0 128px;\n  }\n`\n\nexport const PreviewImage = styled('img')`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  background: ${({\n    theme: {\n      color: { black },\n    },\n  }) => black};\n`\n\nexport const NavigateMoreButton = styled(animated.div)`\n  position: absolute;\n  bottom: 120px;\n  left: 50%;\n  transform: translateX(-50%);\n  color: ${({\n    theme: {\n      color: { secondary },\n    },\n  }) => secondary};\n  &:hover {\n    color: ${({\n      theme: {\n        color: { secondaryHover },\n      },\n    }) => secondaryHover};\n  }\n  cursor: pointer;\n  transition: color ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  @media (min-width: 480px) {\n    bottom: 80px;\n  }\n`\n","import { animated, useTrail } from 'react-spring'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { easeExpInOut } from 'd3-ease'\n\nconst OverflowWrapper = styled('div')`\n  height: auto;\n  overflow: hidden;\n`\n\nconst H1 = styled(animated.h1)`\n  font-weight: 900;\n  font-family: 'Chivo', sans-serif;\n  color: ${({\n    theme: {\n      color: { secondary },\n    },\n  }) => secondary};\n  text-shadow: 1px 1px 0px red, -1px -1px 0px hotpink;\n  margin-bottom: 15px;\n\n  font-size: 42px;\n  @media (min-width: 375px) {\n    font-size: 54px;\n  }\n  @media (min-width: 450px) {\n    font-size: 54px;\n    letter-spacing: 3px;\n    line-height: 54px;\n    text-shadow: 3px 3px 0px red, -3px -3px 0px hotpink;\n  }\n  @media (min-width: 650px) {\n    font-size: 92px;\n    letter-spacing: 3px;\n    line-height: 86px;\n  }\n  @media (min-width: 1200px) {\n    font-size: 140px;\n    letter-spacing: 3px;\n    line-height: 118px;\n  }\n`\n\nconst useNameAnimation = () => {\n  const introText = ['Frontend Web-Dev', 'Dima Baranov']\n\n  const introTextTrails = useTrail(introText.length, {\n    from: {\n      opacity: 0,\n      transform: 'translate3d(0px, 100%, 0px)',\n    },\n    to: {\n      opacity: 1,\n      transform: 'translate3d(0px, 0%, 0px)',\n    },\n    config: {\n      duration: 2000,\n      easing: easeExpInOut,\n    },\n  })\n\n  const renderName = () =>\n    introTextTrails.map((value, index) => {\n      return (\n        <OverflowWrapper key={introText[index]}>\n          <H1 style={value}>{introText[index]}</H1>\n        </OverflowWrapper>\n      )\n    })\n\n  return { renderName }\n}\n\nexport default useNameAnimation\n","import React from 'react'\nimport styled, { withTheme } from 'styled-components'\nimport useNameAnimation from './useNameAnimation'\n\ninterface Props {}\n\nconst Wrapper = styled('div')`\n  width: 100%;\n  margin-bottom: 28px;\n  @media (min-width: 650px) {\n    margin-bottom: 56px;\n  }\n`\n\n/**\n * Animated Name\n */\nfunction AnimatedName() {\n  const { renderName } = useNameAnimation()\n  return <Wrapper>{renderName()}</Wrapper>\n}\n\nexport default withTheme(AnimatedName)\n","import React, { useState } from 'react'\nimport { useSpring } from 'react-spring'\nimport { easeExpOut } from 'd3-ease'\nimport {\n  NavigateMoreButton,\n  PreviewContent,\n  PreviewImage,\n} from '../PreviewContent'\nimport AnimatedName from '../../AnimatedName'\nimport mePortraitImg from '../../../images/Me Portrait.jpg'\nimport meLandscapeImg from '../../../images/Me Landscape.jpg'\n\ninterface Props {}\n\n/**\n * Home preview content (img + text)\n */\nfunction HomePreview(props: Props) {\n  const {} = props\n  const showMoreButtonStyled = useSpring({\n    delay: 1600,\n    from: {\n      opacity: 0,\n      transform: 'translate3d(-80%, 0px, 0px)',\n    },\n    to: {\n      opacity: 1,\n      transform: 'translate3d(-50%, 0px, 0px)',\n    },\n    config: {\n      duration: 1900,\n      easing: easeExpOut,\n    },\n  })\n  return (\n    <PreviewContent>\n      <PreviewImage src={meLandscapeImg} />\n      <AnimatedName />\n      <NavigateMoreButton style={showMoreButtonStyled}>\n        Read More\n      </NavigateMoreButton>\n    </PreviewContent>\n  )\n}\n\nexport default HomePreview\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { useSpring } from 'react-spring'\nimport { easeExpOut } from 'd3-ease'\nimport {\n  ContentHolder,\n  ContentName,\n  PlainText,\n  Root,\n  TextDivider,\n} from './styles'\nimport { useToggleTheme } from '../../theme/theme'\nimport HomePreview from '../../components/Preview/HomePreview/HomePreview'\n\ninterface Props {}\n\n/**\n * Home screen\n */\nfunction Home(props: Props) {\n  const contentSpring = useSpring({\n    delay: 1450,\n    from: {\n      opacity: 0,\n      transform: 'translate3d(0px, -8px, 0px)',\n    },\n    to: {\n      opacity: 1,\n      transform: 'translate3d(0px, 0px, 0px)',\n    },\n    config: {\n      duration: 1300,\n      easing: easeExpOut,\n    },\n  })\n\n  const toggleTheme = useToggleTheme()\n  return (\n    <>\n      <HomePreview />\n      <Root onClick={toggleTheme}>\n        <ContentHolder style={contentSpring}>\n          <ContentName>About Me</ContentName>\n          <PlainText>\n            Yo wasup guys I'm just cool-ass dev, who you wanna pay money.\n          </PlainText>\n          <PlainText>\n            Looking for a remote part-time React Dev position;)\n          </PlainText>\n          <TextDivider />\n          <PlainText>\n            My ideal life is look like this - I sniffing cocaine outta model-hoe\n            butt, on my yacht, somewhere in Mongo-Congo. While my multiple\n            sources of income generating me enough money to buy this Mongo-Congo\n            and install Solar Systems everywhere.\n          </PlainText>\n          <PlainText>\n            I would like to solve trash issue in the world, because I'm cool.\n          </PlainText>\n        </ContentHolder>\n      </Root>\n    </>\n  )\n}\n\nexport default withTheme(Home)\n","import { useSpring } from 'react-spring'\nimport { MutableRefObject, useEffect } from 'react'\n\nconst useSmoothScroll = (\n  scrollWrapperRef: MutableRefObject<HTMLDivElement>,\n) => {\n  let scrollDeltaY = 0\n\n  const windowHeight = window.innerHeight\n\n  let wrapperHeight = 0\n  useEffect(() => {\n    if (scrollWrapperRef.current) {\n      wrapperHeight = scrollWrapperRef.current.clientHeight\n    }\n  }, [scrollWrapperRef])\n\n  const [scrollProps, setScrollProps] = useSpring(() => {\n    return {\n      transform: `translate3d(0px, ${scrollDeltaY}px, 0px)`,\n    }\n  })\n  const handleScroll = (e: WheelEvent) => {\n    const newScrollValue = scrollDeltaY - e.deltaY\n    if (newScrollValue <= 0) {\n      if (Math.abs(newScrollValue) > wrapperHeight - windowHeight) {\n        scrollDeltaY = (wrapperHeight - windowHeight) * -1\n      } else {\n        scrollDeltaY = newScrollValue\n      }\n    } else {\n      scrollDeltaY = 0\n    }\n    setScrollProps({\n      transform: `translate3d(0px, ${scrollDeltaY}px, 0px)`,\n    })\n  }\n  return {\n    handleScroll,\n    scrollProps,\n  }\n}\n\nexport default useSmoothScroll\n","import React, { ReactNode, useRef } from 'react'\nimport styled from 'styled-components'\nimport { animated } from 'react-spring'\nimport useSmoothScroll from './hooks/useSmoothScroll'\n\ninterface Props {\n  children: ReactNode\n}\n\nconst Scrollable = styled(animated.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  transform: translate3d(0px, 0px, 0px);\n  overflow: hidden;\n  will-change: transform;\n  // use default scroll behaviour on mobiles\n  @media (hover: none) and (pointer: coarse) {\n    overflow-y: auto;\n    height: 100%;\n  }\n`\n\n/**\n * Smooth scroll wrapper\n */\nfunction SmoothScroll(props: Props) {\n  const { children } = props\n  const scrollWrapperRef = useRef()\n  const { handleScroll, scrollProps } = useSmoothScroll(scrollWrapperRef)\n  console.log({ scrollWrapperRef })\n  return (\n    <Scrollable\n      ref={scrollWrapperRef}\n      onWheel={handleScroll}\n      style={scrollProps}\n    >\n      {children}\n    </Scrollable>\n  )\n}\n\nexport default SmoothScroll\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { ThemeProvider, withTheme } from 'styled-components'\nimport GlobalStyle from './GlobalStyles'\nimport SideNav from '../components/SideNav'\nimport { MenuLink } from '../types/MenuLink'\nimport AnimatedSwitch from '../components/AnimatedSwitch'\nimport Home from '../screens/Home/Home'\nimport { useTheme } from '../theme/theme'\nimport { PlainText, Root } from '../screens/Home/styles'\nimport SmoothScroll from '../components/SmoothScroll'\nimport { SideNavContextProvider } from '../components/SideNav/SideNavContext'\n\ninterface Props {}\n\nconst menuOptions: MenuLink[] = [\n  { to: '/', text: 'About' },\n  { to: '/contact', text: 'Contact Me' },\n]\n\n/**\n * App\n */\nfunction App(props: Props) {\n  const theme = useTheme()\n  return (\n    <ThemeProvider theme={theme}>\n      <SideNavContextProvider>\n        <GlobalStyle />\n        <SideNav menuOptions={menuOptions} />\n        <AnimatedSwitch>\n          <Route exact path=\"/\">\n            <SmoothScroll>\n              <Home />\n            </SmoothScroll>\n          </Route>\n          <Route>\n            <Root>\n              <SmoothScroll>\n                <PlainText>Nothing Here!</PlainText>\n              </SmoothScroll>\n            </Root>\n          </Route>\n        </AnimatedSwitch>\n      </SideNavContextProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default withTheme(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './App/App'\nimport ThemeModeContextProvider from './theme/ThemeModeContextProvider'\n\nReactDOM.render(\n  <BrowserRouter>\n    <ThemeModeContextProvider>\n      <App />\n    </ThemeModeContextProvider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n","module.exports = __webpack_public_path__ + \"static/media/Me Landscape.49d60055.jpg\";"],"sourceRoot":""}