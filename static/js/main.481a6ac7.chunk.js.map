{"version":3,"sources":["components/SideNav/MenuOptions/styles.ts","components/SideNav/MenuOptions/MenuOptions.tsx","components/SideNav/hooks/useSideNavAnimation.ts","components/SideNav/styles.ts","theme/ThemeModeContextProvider.tsx","components/SideNav/SideNavContext.tsx","theme/theme.tsx","components/SideNav/SideNav.tsx","components/AnimatedSwitch/AnimatedSwitch.tsx","screens/Home/styles.ts","components/Preview/PreviewContent.ts","components/AnimatedName/useNameAnimation.tsx","components/AnimatedName/AnimatedName.tsx","components/Preview/HomePreview/HomePreview.tsx","components/SmoothScroll/hooks/useSmoothScroll.ts","components/SmoothScroll/hooks/useScrollDrag.ts","components/SmoothScroll/SmoothScroll.tsx","screens/Home/Home.tsx","App/GlobalStyles.tsx","App/App.tsx","index.tsx","images/Me Portrait.jpg"],"names":["MenuOptionWrapper","styled","animated","span","MenuOption","NavLink","theme","color","secondary","transitionSpeed","secondaryHover","withTheme","props","menuOptionTransitions","onToggleNav","map","item","key","style","exact","to","onClick","text","useSideNavAnimation","isOpen","menuOptions","wrapperRef","useRef","wrapperStyleProps","useSpring","ref","from","transform","config","easing","easeExpInOut","duration","bgRef","bgBlurTransforms","useTransition","opacity","enter","leave","meuOptionsRef","option","trail","useChain","ThemeMode","Wrapper","div","bg","BackdropFilter","HamburgerStyled","HamburgerSpin","isActive","secondaryColor","SideNavContext","React","createContext","handleToggle","useSideNavContext","useContext","SideNavContextProvider","children","useState","isNavOpen","setNavOpen","Provider","value","ThemeModeContext","mode","LIGHT","toggleMode","ThemeModeContextProvider","currHours","Date","getHours","DARK","setMode","getModeValue","lightVal","darkVal","useTheme","primary","white","black","primaryHover","accent","themeColor","getConvertedTheme","SideNav","toggleButton","Root","AnimatedSwitch","location","useLocation","transitions","pathname","delay","initial","slow","ContentName","PlainText","TextDivider","ContentHolder","PreviewContent","PreviewImage","NavigateMoreButton","OverflowWrapper","H1","h1","useNameAnimation","introText","introTextTrails","useTrail","length","renderName","index","HomePreview","showMoreButtonStyled","easeExpOut","src","mePortraitImg","useSmoothScroll","scrollWrapperRef","wrapperHeight","windowToContentRatio","scrollDeltaYHolded","scrollDeltaY","scrollbarHeight","scrollbarMovePercentage","window","innerHeight","scrollProps","setScrollProps","height","onRest","setScrollbarStyles","scrollbarStyles","useEffect","current","clientHeight","SCROLLBAR_OFFSET","handleWindowResize","addEventListener","removeEventListener","handleScroll","valueToScroll","Math","abs","easeCubicOut","handleMouseWheel","e","deltaY","handleScrollbarDrag","handleScrollbarMouseUp","handleScrollbarMouseDown","moveScrollWrapper","useScrollDrag","scrollBarRef","onScrollDrag","onScrollbarMouseUp","onScrollbarMouseDown","dragStartY","handleMouseMove","valueToPass","clientY","handleMouseUp","width","document","Scrollable","isTest","ScrollbarContainer","Scroll","SmoothScroll","handleMouseDown","onMouseDown","onWheel","ConnectedSmoothScroll","HomeContent","contentSpring","toggleTheme","Home","GlobalStyle","Inject","createGlobalStyle","path","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.481a6ac7.chunk.js","sourcesContent":["import { animated } from 'react-spring'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const MenuOptionWrapper = styled(animated.span)`\n  margin-bottom: 20px;\n`\n\nexport const MenuOption = styled(NavLink)`\n  text-decoration: none;\n  color: ${({\n    theme: {\n      color: { secondary },\n    },\n  }) => secondary};\n  font-size: 18px;\n  font-weight: 100;\n  transition: color ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  padding-right: 8px;\n  padding-left: 5px;\n  &.active {\n    color: ${({\n      theme: {\n        color: { secondaryHover },\n      },\n    }) => secondaryHover};\n    font-weight: 900;\n  }\n  &:hover {\n    color: ${({\n      theme: {\n        color: { secondaryHover },\n      },\n    }) => secondaryHover};\n  }\n`\n","import React from 'react'\nimport { withTheme } from 'styled-components'\nimport { MenuOption, MenuOptionWrapper } from './styles'\n\ninterface Props {\n  menuOptionTransitions: any[]\n  onToggleNav: () => void\n}\n\n/**\n * MenuOptions\n */\nfunction MenuOptions(props) {\n  const { menuOptionTransitions, onToggleNav } = props\n  return menuOptionTransitions.map(({ item, key, props }) => {\n    return (\n      <MenuOptionWrapper style={props} key={key}>\n        <MenuOption exact to={item.to} onClick={onToggleNav}>\n          {item.text}\n        </MenuOption>\n      </MenuOptionWrapper>\n    )\n  })\n}\n\nexport default withTheme(MenuOptions)\n","import { useRef } from 'react'\nimport { useChain, useSpring, useTransition } from 'react-spring'\nimport { easeExpInOut } from 'd3-ease'\n\nconst useSideNavAnimation = (isOpen: boolean, menuOptions: any[]) => {\n  const wrapperRef = useRef()\n  const wrapperStyleProps = useSpring({\n    ref: wrapperRef,\n    from: { transform: 'translate3d(100%, 0px, 0px)' },\n    to: {\n      transform: isOpen\n        ? 'translate3d(0%, 0px, 0px)'\n        : 'translate3d(100%, 0px, 0px)',\n    },\n    config: {\n      easing: easeExpInOut,\n      duration: isOpen ? 1400 : 800,\n    },\n  })\n  const bgRef = useRef()\n  const bgBlurTransforms = useTransition(isOpen, null, {\n    ref: bgRef,\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  const meuOptionsRef = useRef()\n  const menuOptionTransitions = useTransition(\n    isOpen ? menuOptions : [],\n    option => option.text,\n    {\n      ref: meuOptionsRef,\n      from: {\n        opacity: 0,\n        transform: 'translate3d(20px, 0px ,0px)',\n      },\n      enter: {\n        opacity: 1,\n        transform: 'translate3d(0px, 0px ,0px)',\n      },\n      leave: {\n        opacity: 0,\n        transform: 'translate3d(20px, 0px ,0px)',\n      },\n      trail: isOpen ? 100 : 120,\n    },\n  )\n\n  useChain(\n    isOpen\n      ? [bgRef, wrapperRef, meuOptionsRef]\n      : [meuOptionsRef, wrapperRef, bgRef],\n    isOpen ? [0, 0, 0.7] : [0, 0.6, 0.6],\n  )\n  return {\n    wrapperStyleProps,\n    menuOptionTransitions,\n    bgBlurTransforms,\n  }\n}\n\nexport default useSideNavAnimation\n","import styled from 'styled-components'\nimport { animated } from 'react-spring'\nimport { HamburgerSpin } from 'react-animated-burgers'\n\nexport const Wrapper = styled(animated.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  padding: 64px 24px;\n  width: 50vw;\n  min-width: 200px;\n  max-width: 300px;\n  height: 100vh;\n  background: ${({\n    theme: {\n      bg: { secondary },\n    },\n  }) => secondary};\n  z-index: 9999;\n  transform: translate3d(100%, 0px, 0px);\n  transition: background ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  will-change: transform;\n`\n\nexport const BackdropFilter = styled(animated.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.8);\n  opacity: 0;\n  cursor: pointer;\n  outline: none;\n  z-index: 9998;\n`\n\nexport const HamburgerStyled = styled(HamburgerSpin)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 10000;\n  outline: none;\n  padding: 0;\n  & div {\n    width: 20px;\n  }\n  & span,\n  & span::after,\n  & span::before {\n    width: 20px;\n    height: 1px;\n    background-color: ${({\n      isActive,\n      theme: {\n        bg: { secondary },\n        color: { secondary: secondaryColor },\n      },\n    }) => (isActive ? secondaryColor : secondary)};\n    transition: bottom 0.3s ease-in,\n      transform 0.4s 0.5s cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n  & span::before {\n    top: -7px;\n  }\n  & span::after {\n    bottom: ${({ isActive }) => (isActive ? '0px' : '-7px')};\n  }\n`\n","import React, { ReactNode, useState } from 'react'\n\nexport enum ThemeMode {\n  DARK,\n  LIGHT,\n}\n\nexport const ThemeModeContext = React.createContext({\n  mode: ThemeMode.LIGHT,\n  toggleMode: () => {},\n})\n\nconst ThemeModeContextProvider = ({ children }: { children: ReactNode }) => {\n  const currHours = new Date().getHours()\n  const [mode, setMode] = useState(\n    currHours > 18 || currHours < 6 ? ThemeMode.DARK : ThemeMode.LIGHT,\n  )\n  const toggleMode = () => {\n    setMode(mode === ThemeMode.LIGHT ? ThemeMode.DARK : ThemeMode.LIGHT)\n  }\n  return (\n    <ThemeModeContext.Provider value={{ mode, toggleMode }}>\n      {children}\n    </ThemeModeContext.Provider>\n  )\n}\n\nexport default ThemeModeContextProvider\n","import React, { ReactNode, useContext, useState } from 'react'\n\nconst SideNavContext = React.createContext({\n  isOpen: false,\n  handleToggle: () => {},\n})\n\nexport const useSideNavContext = () => {\n  const { isOpen, handleToggle } = useContext(SideNavContext)\n  return { isOpen, handleToggle }\n}\n\nexport const SideNavContextProvider = ({\n  children,\n}: {\n  children: ReactNode\n}) => {\n  const [isNavOpen, setNavOpen] = useState(false)\n  const handleNavToggle = () => {\n    setNavOpen(!isNavOpen)\n  }\n\n  return (\n    <SideNavContext.Provider\n      value={{ isOpen: isNavOpen, handleToggle: handleNavToggle }}\n    >\n      {children}\n    </SideNavContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport { ThemeMode, ThemeModeContext } from './ThemeModeContextProvider'\n\nfunction getModeValue(mode: ThemeMode, lightVal: string, darkVal: string) {\n  return mode === ThemeMode.LIGHT ? lightVal : darkVal\n}\n\nconst getConvertedTheme = (mode: ThemeMode) => {\n  return {\n    bg: {\n      primary: getModeValue(mode, '#f6f6f6', '#020202'),\n      secondary: getModeValue(mode, '#020202', '#a20051'),\n    },\n    color: {\n      white: '#fcfcfc',\n      black: '#020202',\n      primary: getModeValue(mode, '#020202', '#f6f6f6'),\n      primaryHover: getModeValue(mode, '#00051d', '#fff'),\n      secondary: getModeValue(mode, '#f6f6f6', '#f6f6f6'),\n      secondaryHover: getModeValue(mode, 'hotpink', '#ff00a6'),\n      accent: getModeValue(mode, '#ba004e', 'hotpink'),\n      themeColor: getModeValue(mode, '#fff', '#020202'),\n    },\n    transitionSpeed: '0.5s',\n  }\n}\n\nexport const useTheme = () => {\n  const { mode } = useContext(ThemeModeContext)\n  return getConvertedTheme(mode)\n}\n\nexport const useToggleTheme = () => {\n  const { toggleMode } = useContext(ThemeModeContext)\n  return toggleMode\n}\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport MenuOptions from './MenuOptions/MenuOptions'\nimport useSideNavAnimation from './hooks/useSideNavAnimation'\nimport { BackdropFilter, HamburgerStyled, Wrapper } from './styles'\nimport { MenuLink } from '../../types/MenuLink'\nimport { useSideNavContext } from './SideNavContext'\nimport { useTheme } from '../../theme/theme'\n\ninterface Props {\n  menuOptions: MenuLink[]\n}\n\n/**\n * Side Navigation\n */\nfunction SideNav({ menuOptions }: Props) {\n  const { isOpen, handleToggle } = useSideNavContext()\n  const theme = useTheme()\n  const {\n    bgBlurTransforms,\n    menuOptionTransitions,\n    wrapperStyleProps,\n  } = useSideNavAnimation(isOpen, menuOptions)\n  return (\n    <ThemeProvider theme={theme}>\n      <HamburgerStyled isActive={isOpen} toggleButton={handleToggle} />\n      {bgBlurTransforms.map(\n        ({ item, key, props }) =>\n          item && (\n            <BackdropFilter key={key} onClick={handleToggle} style={props} />\n          ),\n      )}\n      <Wrapper style={wrapperStyleProps}>\n        <MenuOptions\n          onToggleNav={handleToggle}\n          menuOptionTransitions={menuOptionTransitions}\n        />\n      </Wrapper>\n    </ThemeProvider>\n  )\n}\n\nexport default SideNav\n","import React from 'react'\nimport { animated, config, useTransition } from 'react-spring'\nimport { Switch, SwitchProps, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\n\ninterface Props extends SwitchProps {\n  children: any\n}\n\nconst Root = styled(animated.div)`\n  width: 100%;\n  height: 100%;\n  // use default scroll behaviour on mobiles\n  @media (hover: none) and (pointer: coarse) {\n    height: 100%;\n  }\n`\n\n/**\n * Switch that animating routers\n */\nfunction AnimatedSwitch({ children }: Props) {\n  const location = useLocation()\n  const transitions = useTransition(location, location => location.pathname, {\n    delay: 2000,\n    initial: {\n      opacity: 1,\n      transform: 'translate3d(0%,0,0)',\n    },\n    from: {\n      opacity: 0,\n    },\n    enter: {\n      opacity: 1,\n    },\n    leave: {\n      opacity: 0,\n    },\n    config: config.slow,\n  })\n\n  return (\n    <>\n      {transitions.map(({ item, props, key }) => {\n        return (\n          <Root key={key} style={props}>\n            <Switch location={item}>{children}</Switch>\n          </Root>\n        )\n      })}\n    </>\n  )\n}\n\nexport default AnimatedSwitch\n","import styled from 'styled-components'\nimport { animated } from 'react-spring'\nimport meLandscapeImg from '../../images/Me Landscape.jpg'\nimport mePortraitImg from '../../images/Me Portrait.jpg'\n\nexport const Root = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  min-height: 100%;\n  height: 100%;\n  padding: 0px 32px;\n  padding-bottom: 64px;\n  overflow: auto;\n  background: ${({\n    theme: {\n      bg: { primary },\n    },\n  }) => primary};\n  transition: background ${({ theme: { transitionSpeed } }) => transitionSpeed};\n`\n\nexport const ContentName = styled('h1')`\n  font-family: 'Chivo', sans-serif;\n  font-weight: 700;\n  font-size: 21px;\n  margin-bottom: 28px;\n  margin-top: 64px;\n  color: ${({\n    theme: {\n      color: { primary },\n    },\n  }) => primary};\n  transition: color ${({ theme: { transitionSpeed } }) => transitionSpeed};\n`\n\nexport const PlainText = styled('p')`\n  width: 100%;\n  color: ${({\n    theme: {\n      color: { primary },\n    },\n  }) => primary};\n  transition: color ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  @media (min-width: 650px) {\n    letter-spacing: 1px;\n    font-size: 18px;\n  }\n`\n\nexport const TextDivider = styled('div')`\n  margin-bottom: 8px;\n`\n\nexport const ContentHolder = styled(animated.div)`\n  width: 100%;\n  height: auto;\n  @media (min-width: 650px) {\n    width: 60%;\n  }\n`\n","import styled from 'styled-components'\nimport { animated } from 'react-spring'\nimport mePortraitImg from '../../images/Me Portrait.jpg'\nimport meLandscapeImg from '../../images/Me Landscape.jpg'\n\nexport const PreviewContent = styled('div')`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content:center;\n  width: 100%;\n  min-height: 100vh;\n  background-size: cover;\n  background-position: center;\n\n  padding: 64px 15px 0 15px;\n  @media (min-width: 375px) {\n    padding: 64px 32px 0 32px;\n  }\n  @media (min-width: 480px) {\n    padding: 64px 32px 0 32px;\n  }\n  @media (min-width: 900px) {\n    padding: 80px 80px 0 80px;\n  }\n  @media (min-width: 1280px) {\n    padding: 128px 128px 0 128px;\n  }\n`\n\nexport const PreviewImage = styled('div')`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  background: ${({\n    theme: {\n      bg: { primary },\n    },\n  }) => primary};\n  transition: background-color\n    ${({ theme: { transitionSpeed } }) => transitionSpeed};\n`\n\nexport const NavigateMoreButton = styled(animated.div)`\n  position: absolute;\n  bottom: 120px;\n  left: 50%;\n  transform: translateX(-50%);\n  color: ${({\n    theme: {\n      color: { primary },\n    },\n  }) => primary};\n  &:hover {\n    color: ${({\n      theme: {\n        color: { secondaryHover },\n      },\n    }) => secondaryHover};\n  }\n  cursor: pointer;\n  transition: color ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  @media (min-width: 480px) {\n    bottom: 80px;\n  }\n`\n","import { animated, useTrail } from 'react-spring'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { easeExpInOut } from 'd3-ease'\n\nconst OverflowWrapper = styled('div')`\n  display: flex;\n  justify-content: center;\n  height: auto;\n  overflow: hidden;\n`\n\nconst H1 = styled(animated.h1)`\n  font-weight: 900;\n  font-family: 'Chivo', sans-serif;\n  color: ${({\n    theme: {\n      color: { primary },\n    },\n  }) => primary};\n  transition: color ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  text-shadow: 1px 1px 0px red, -1px -1px 0px hotpink;\n  margin-bottom: 15px;\n\n  font-size: 42px;\n  @media (min-width: 375px) {\n    font-size: 54px;\n  }\n  @media (min-width: 450px) {\n    font-size: 54px;\n    letter-spacing: 3px;\n    line-height: 54px;\n    text-shadow: 3px 3px 0px red, -3px -3px 0px hotpink;\n  }\n  @media (min-width: 650px) {\n    font-size: 92px;\n    letter-spacing: 3px;\n    line-height: 86px;\n  }\n  @media (min-width: 1200px) {\n    font-size: 140px;\n    letter-spacing: 3px;\n    line-height: 118px;\n  }\n`\n\nconst useNameAnimation = (introText: string[]) => {\n  const introTextTrails = useTrail(introText.length, {\n    from: {\n      opacity: 0,\n      transform: 'translate3d(0px, 100%, 0px)',\n    },\n    to: {\n      opacity: 1,\n      transform: 'translate3d(0px, 0%, 0px)',\n    },\n    config: {\n      duration: 2000,\n      easing: easeExpInOut,\n    },\n  })\n\n  const renderName = () =>\n    introTextTrails.map((value, index) => {\n      return (\n        <OverflowWrapper key={introText[index]}>\n          <H1 style={value}>{introText[index]}</H1>\n        </OverflowWrapper>\n      )\n    })\n\n  return { renderName }\n}\n\nexport default useNameAnimation\n","import React from 'react'\nimport styled, { withTheme } from 'styled-components'\nimport useNameAnimation from './useNameAnimation'\n\ninterface Props {}\n\nconst Wrapper = styled('div')`\n  width: 100%;\n  margin-bottom: 280px;\n  @media (min-width: 650px) {\n    margin-bottom: 300px;\n  }\n`\n\n/**\n * Animated Name\n */\nfunction AnimatedName() {\n  const introText = ['Frontend-Dev', 'Dima Baranov']\n  const { renderName } = useNameAnimation(introText)\n  return <Wrapper>{renderName()}</Wrapper>\n}\n\nexport default withTheme(AnimatedName)\n","import React, { useState } from 'react'\nimport { useSpring } from 'react-spring'\nimport { easeExpOut } from 'd3-ease'\nimport {\n  NavigateMoreButton,\n  PreviewContent,\n  PreviewImage,\n} from '../PreviewContent'\nimport AnimatedName from '../../AnimatedName'\nimport mePortraitImg from '../../../images/Me Portrait.jpg'\nimport meLandscapeImg from '../../../images/Me Landscape.jpg'\n\ninterface Props {}\n\n/**\n * Home preview content (img + text)\n */\nfunction HomePreview(props: Props) {\n  const {} = props\n  const showMoreButtonStyled = useSpring({\n    delay: 1600,\n    from: {\n      opacity: 0,\n      transform: 'translate3d(-80%, 0px, 0px)',\n    },\n    to: {\n      opacity: 1,\n      transform: 'translate3d(-50%, 0px, 0px)',\n    },\n    config: {\n      duration: 1900,\n      easing: easeExpOut,\n    },\n  })\n  return (\n    <PreviewContent>\n      <PreviewImage src={mePortraitImg} />\n      <AnimatedName />\n      <NavigateMoreButton style={showMoreButtonStyled}>\n        Read More\n      </NavigateMoreButton>\n    </PreviewContent>\n  )\n}\n\nexport default HomePreview\n","import { useSpring } from 'react-spring'\nimport { MutableRefObject, useEffect } from 'react'\nimport { easeCubicOut } from 'd3-ease'\nimport { log } from 'util'\n\nconst SCROLLBAR_OFFSET = 16\n\nconst useSmoothScroll = (\n  scrollWrapperRef: MutableRefObject<HTMLDivElement>,\n) => {\n  /* ********* CALCULATED VARIABLES *********** */\n  let wrapperHeight = 1\n  let windowToContentRatio = 1\n  let scrollDeltaYHolded = 1\n\n  /* ********* STYLES VARIABLES *********** */\n  let scrollDeltaY = 0\n  let scrollbarHeight = 0\n  let scrollbarMovePercentage =\n    (scrollDeltaY / wrapperHeight) * window.innerHeight - SCROLLBAR_OFFSET\n\n  /* ********* SPRINGS STYLES *********** */\n  const [scrollProps, setScrollProps] = useSpring(() => {\n    return {\n      transform: `translate3d(0px, 0px, 0px)`,\n    }\n  })\n  const [scrollbarStyles, setScrollbarStyles] = useSpring(() => ({\n    to: {\n      transform: `translate3d(0px, ${scrollbarMovePercentage * -1}px, 0px)`,\n      height: 0,\n      opacity: 0.4,\n    },\n    onRest: () => {\n      setScrollbarStyles({\n        // @ts-ignore\n        to: {\n          opacity: 0,\n        },\n        delay: 1500,\n        config: {},\n      })\n    },\n  }))\n\n  /* ********* ON WRAPPER MOUNTED *********** */\n  useEffect(() => {\n    if (scrollWrapperRef.current) {\n      wrapperHeight = scrollWrapperRef.current.clientHeight\n      if (wrapperHeight > window.innerHeight) {\n        windowToContentRatio =\n          window.innerHeight / scrollWrapperRef.current.clientHeight\n        scrollbarHeight =\n          window.innerHeight * windowToContentRatio - SCROLLBAR_OFFSET * 2\n        setScrollbarStyles({\n          to: {\n            transform: `translate3d(0px, ${scrollbarMovePercentage *\n              -1}px, 0px)`,\n            height: scrollbarHeight,\n            opacity: 0.4,\n          },\n          config: key => {\n            if (key === 'height') {\n              return {\n                duration: 0,\n              }\n            }\n            return {}\n          },\n        })\n      }\n    }\n  }, [scrollWrapperRef])\n\n  /* ********* WINDOW RESIZE *********** */\n  const handleWindowResize = () => {\n    wrapperHeight = scrollWrapperRef.current.clientHeight\n    if (wrapperHeight > window.innerHeight) {\n      scrollbarHeight =\n        window.innerHeight *\n          (window.innerHeight / scrollWrapperRef.current.clientHeight) -\n        SCROLLBAR_OFFSET * 2\n    }\n  }\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize)\n    return () => window.removeEventListener('resize', handleWindowResize)\n  }, [])\n\n  /* ********* SET STYLES ON WHEEL SCROLL *********** */\n  const handleScroll = (valueToScroll: number) => {\n    scrollDeltaY = valueToScroll\n\n    // if scroll down\n    if (valueToScroll <= 0 && wrapperHeight > window.innerHeight) {\n      // When about to scroll to the very bottom\n      if (Math.abs(valueToScroll) > wrapperHeight - window.innerHeight) {\n        scrollDeltaY = (wrapperHeight - window.innerHeight) * -1\n      }\n      //  when wanna scroll more than bottom\n    } else {\n      scrollDeltaY = 0\n    }\n    // SET NEW VALUES FOR STYLES\n    // scrollDeltaY = newScrollValue\n    scrollbarMovePercentage =\n      (scrollDeltaY / wrapperHeight) * window.innerHeight - SCROLLBAR_OFFSET\n\n    setScrollbarStyles({\n      to: {\n        transform: `translate3d(0px, ${scrollbarMovePercentage * -1}px, 0px)`,\n        height: scrollbarHeight,\n        opacity: 0.4,\n      },\n      config: key => {\n        if (key === 'opacity') {\n          return {\n            duration: 10,\n            easing: easeCubicOut,\n          }\n        }\n        return {}\n      },\n    })\n    setScrollProps({\n      transform: `translate3d(0px, ${scrollDeltaY}px, 0px)`,\n    })\n  }\n\n  /* ********* EVENT HANDLES *********** */\n  const handleMouseWheel = (e: WheelEvent) => {\n    const valueToScroll = scrollDeltaY - e.deltaY\n    handleScroll(valueToScroll)\n  }\n\n  const handleScrollbarDrag = deltaY => {\n    const valueToScroll = scrollDeltaYHolded + deltaY\n    handleScroll(valueToScroll)\n  }\n  const handleScrollbarMouseUp = () => {\n    scrollDeltaYHolded = scrollDeltaY\n  }\n  const handleScrollbarMouseDown = () => {\n    scrollDeltaYHolded = scrollDeltaY\n  }\n\n  const moveScrollWrapper = (deltaY: number) => {\n    handleScroll(deltaY)\n  }\n\n  return {\n    handleMouseWheel,\n    scrollProps,\n    handleScrollbarDrag,\n    handleScrollbarMouseUp,\n    handleScrollbarMouseDown,\n    scrollbarStyles,\n    scrollbarHeight,\n    moveScrollWrapper,\n  }\n}\n\nexport default useSmoothScroll\n","import { MutableRefObject } from 'react'\n\nconst useScrollDrag = (\n  scrollWrapperRef: MutableRefObject<HTMLDivElement>,\n  scrollBarRef: MutableRefObject<HTMLDivElement>,\n  onScrollDrag: (number) => void,\n  onScrollbarMouseUp: () => void,\n  onScrollbarMouseDown: () => void,\n) => {\n  let dragStartY = 0\n  const handleMouseMove = (e: MouseEvent) => {\n    const deltaY = dragStartY - e.clientY + 1\n    const valueToPass =\n      deltaY * (scrollWrapperRef.current.clientHeight / window.innerHeight)\n    onScrollDrag(valueToPass)\n  }\n  const handleMouseUp = () => {\n    scrollBarRef.current.style.opacity = '0.4'\n    scrollBarRef.current.style.width = '6px'\n    onScrollbarMouseUp()\n    document.removeEventListener('mousemove', handleMouseMove)\n    document.removeEventListener('mouseup', handleMouseMove)\n  }\n  const handleMouseDown = (e: MouseEvent) => {\n    dragStartY = e.clientY + 1\n    scrollBarRef.current.style.opacity = '0.8'\n    scrollBarRef.current.style.width = '10px'\n    onScrollbarMouseDown()\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp)\n  }\n\n  return handleMouseDown\n}\n\nexport default useScrollDrag\n","import React, { ReactNode, useEffect, useRef } from 'react'\nimport styled, { ThemeProvider, withTheme } from 'styled-components'\nimport { animated } from 'react-spring'\nimport useSmoothScroll from './hooks/useSmoothScroll'\nimport useScrollDrag from './hooks/useScrollDrag'\nimport { useTheme } from '../../theme/theme'\n\ninterface Props {\n  children: ReactNode\n  scrollBarRef: any\n  handleMouseDown: any\n  scrollbarHeight: any\n  scrollbarStyles: any\n  scrollWrapperRef: any\n  handleMouseWheel: any\n  scrollProps: any\n}\n\nconst Scrollable = styled(animated.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  transform: translate3d(0px, 0px, 0px);\n  overflow: ${({ isTest }) => (isTest ? 'auto' : 'hidden')};\n  height: ${({ isTest }) => (isTest ? '100%' : 'auto')};\n  will-change: transform;\n\n  // use default scroll behaviour on mobiles\n  @media (hover: none) and (pointer: coarse) {\n    overflow-y: auto;\n    height: 100%;\n  }\n`\nconst ScrollbarContainer = styled('div')`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 100vh;\n  width: 20px;\n  z-index: 99;\n  &:hover {\n    & span {\n      width: 10px !important;\n      opacity: 0.5 !important;\n    }\n  }\n`\n\nconst Scroll = styled(animated.span)`\n  position: fixed;\n  top: 0px;\n  right: 5px;\n  width: 6px;\n  height: ${({ height }) => `${height}px`};\n  background: ${({\n    theme: {\n      color: { primary },\n    },\n  }) => primary};\n  opacity: 0.4;\n  border-radius: 8px;\n  z-index: 2;\n  transition: opacity 0.25s, width 0.25s,\n    background ${({ theme: { transitionSpeed } }) => transitionSpeed};\n  @media (hover: none) and (pointer: coarse) {\n    display: none;\n  }\n`\n\n/**\n * Smooth scroll wrapper\n */\nfunction SmoothScroll(props: Props) {\n  // TODO: Hide scrollbar after some time\n  const {\n    children,\n    scrollBarRef,\n    handleMouseDown,\n    scrollbarHeight,\n    scrollbarStyles,\n    scrollWrapperRef,\n    handleMouseWheel,\n    scrollProps,\n  } = props\n\n  const theme = useTheme()\n  return (\n    <ThemeProvider theme={theme}>\n      <ScrollbarContainer onMouseDown={handleMouseDown}>\n        <Scroll\n          ref={scrollBarRef}\n          onMouseDown={handleMouseDown}\n          height={scrollbarHeight}\n          style={scrollbarStyles}\n        />\n      </ScrollbarContainer>\n      <Scrollable\n        ref={scrollWrapperRef}\n        onWheel={handleMouseWheel}\n        style={scrollProps}\n      >\n        {children}\n      </Scrollable>\n    </ThemeProvider>\n  )\n}\n\nconst ConnectedSmoothScroll = ({ children }: { children: ReactNode }) => {\n  const scrollWrapperRef = useRef<HTMLDivElement>(null)\n  const scrollBarRef = useRef<HTMLDivElement>(null)\n  const {\n    handleMouseWheel,\n    scrollProps,\n    handleScrollbarDrag,\n    scrollbarHeight,\n    scrollbarStyles,\n    handleScrollbarMouseUp,\n    handleScrollbarMouseDown,\n  } = useSmoothScroll(scrollWrapperRef)\n\n  const handleMouseDown = useScrollDrag(\n    scrollWrapperRef,\n    scrollBarRef,\n    handleScrollbarDrag,\n    handleScrollbarMouseUp,\n    handleScrollbarMouseDown,\n  )\n  return (\n    // @ts-ignore\n    <SmoothScroll\n      scrollWrapperRef={scrollWrapperRef}\n      scrollBarRef={scrollBarRef}\n      handleMouseWheel={handleMouseWheel}\n      scrollProps={scrollProps}\n      handleScrollbarDrag={handleScrollbarDrag}\n      scrollbarHeight={scrollbarHeight}\n      scrollbarStyles={scrollbarStyles}\n      handleScrollbarMouseUp={handleScrollbarMouseUp}\n      handleMouseDown={handleMouseDown}\n    >\n      {children}\n    </SmoothScroll>\n  )\n}\n\nexport default ConnectedSmoothScroll\n","import React, { useMemo } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { useSpring } from 'react-spring'\nimport { easeExpOut } from 'd3-ease'\nimport {\n  ContentHolder,\n  ContentName,\n  PlainText,\n  Root,\n  TextDivider,\n} from './styles'\nimport { useTheme, useToggleTheme } from '../../theme/theme'\nimport HomePreview from '../../components/Preview/HomePreview/HomePreview'\nimport SmoothScroll from '../../components/SmoothScroll'\n\ninterface Props {}\n\n/**\n * Home screen\n */\nfunction Home(props: Props) {\n  return (\n    <SmoothScroll>\n      <HomeContent />\n    </SmoothScroll>\n  )\n}\n\nconst HomeContent = () => {\n  const contentSpring = useSpring({\n    delay: 1450,\n    from: {\n      opacity: 0,\n      transform: 'translate3d(0px, -8px, 0px)',\n    },\n    to: {\n      opacity: 1,\n      transform: 'translate3d(0px, 0px, 0px)',\n    },\n    config: {\n      duration: 1300,\n      easing: easeExpOut,\n    },\n  })\n  const toggleTheme = useToggleTheme()\n  return (\n    <>\n      <HomePreview />\n      <Root onClick={toggleTheme}>\n        <ContentHolder style={contentSpring}>\n          <ContentName>Lorem Iplsum</ContentName>\n          <PlainText>\n            Yo wasup guys I'm just cool-ass dev, who you wanna pay money.\n          </PlainText>\n          <PlainText>\n            Looking for a remote part-time React Dev position;)\n          </PlainText>\n          <TextDivider />\n          <PlainText>\n            My ideal life is look like this - I sniffing cocaine outta model-hoe\n            butt, on my yacht, somewhere in Mongo-Congo. While my multiple\n            sources of income generating me enough money to buy this Mongo-Congo\n            and install Solar Systems everywhere.\n          </PlainText>\n          <PlainText>\n            I would like to solve trash issue in the world, because I'm cool.\n          </PlainText>\n        </ContentHolder>\n      </Root>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\nimport { useTheme } from '../theme/theme'\n\nconst GlobalStyle = () => {\n  const theme = useTheme()\n  const Inject = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap');\n  @import url('https://fonts.googleapis.com/css?family=Chivo:300,700,900&display=swap');\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Lato', sans-serif;\n  }\n  ::-webkit-scrollbar {\n    //width: 0px;  /* Remove scrollbar space */\n    //background: transparent;  /* Optional: just make scrollbar invisible */\n  }\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    user-select: none;\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto,\n    segoe ui, arial, sans-serif;\n    background: ${({\n      theme: {\n        bg: { primary },\n      },\n    }) => primary};\n  }\n  \n  #root {\n    width: 100%;\n    height: 100%;\n    //overflow-y: auto;\n  }\n`\n  return (\n    <ThemeProvider theme={theme}>\n      <Inject />\n    </ThemeProvider>\n  )\n}\nexport default GlobalStyle\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { withTheme } from 'styled-components'\nimport SideNav from '../components/SideNav'\nimport { MenuLink } from '../types/MenuLink'\nimport AnimatedSwitch from '../components/AnimatedSwitch'\nimport Home from '../screens/Home/Home'\nimport { SideNavContextProvider } from '../components/SideNav/SideNavContext'\nimport GlobalStyle from './GlobalStyles'\n\ninterface Props {}\n\nconst menuOptions: MenuLink[] = [\n  { to: '/', text: 'About' },\n  { to: '/contact', text: 'Contact Me' },\n]\n\n/**\n * App\n */\nfunction App(props: Props) {\n  return (\n    <SideNavContextProvider>\n      <GlobalStyle />\n      <SideNav menuOptions={menuOptions} />\n      <AnimatedSwitch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route>\n          <div>Nothing Here!</div>\n        </Route>\n      </AnimatedSwitch>\n    </SideNavContextProvider>\n  )\n}\n\nexport default withTheme(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\n\nimport App from './App/App'\nimport ThemeModeContextProvider from './theme/ThemeModeContextProvider'\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeModeContextProvider>\n      <App />\n    </ThemeModeContextProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n)\n","module.exports = __webpack_public_path__ + \"static/media/Me Portrait.dee09984.jpg\";"],"sourceRoot":""}