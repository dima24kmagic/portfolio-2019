import Document from "next/document";
import { ServerStyleSheet } from "styled-components";

/**
 * Custom Document component for a NextJS application that uses styled-components.
 * The Document component is a special component in NextJS that is used to define the
 * HTML structure and metadata of the server-rendered pages in the application.
 *
 * This component extends the Document component and overrides the getInitialProps
 * static method to collect the styles generated by styled-components and include them
 * in the server-rendered HTML.
 */
export default class MyDocument extends Document {
  /**
   * Overrides the getInitialProps method of the base Document component to collect
   * the styles generated by styled-components and include them in the server-rendered HTML.
   *
   */
  static async getInitialProps(ctx) {
    // Create a new ServerStyleSheet instance to collect the styles generated by styled-components.
    const sheet = new ServerStyleSheet();

    // Save the original renderPage function provided by the context object.
    const originalRenderPage = ctx.renderPage;

    try {
      // Override the renderPage function to enhance the App component with the sheet.collectStyles
      // function from the ServerStyleSheet instance. This function collects the styles generated
      // by styled-components and adds them to the sheet.
      ctx.renderPage = () =>
        originalRenderPage({
          enhanceApp: (App) => (props) =>
            sheet.collectStyles(<App {...props} />),
        });

      // Call the getInitialProps method of the base Document component with the modified ctx object.
      // This will trigger the rendering of the page with the enhanced App component, which will
      // collect the styles generated by styled-components.
      const initialProps = await Document.getInitialProps(ctx);

      // Return the initial props object, with the styles prop modified to include the styles
      // collected by the ServerStyleSheet instance.
      return {
        ...initialProps,
        styles: (
          <>
            {initialProps.styles}
            {sheet.getStyleElement()}
          </>
        ),
      };
    } finally {
      // Seal the ServerStyleSheet instance to prevent further modification.
      sheet.seal();
    }
  }
}
